# 23.master.0.308777
diff --git a/cobalt/adblock/BUILD.gn b/cobalt/adblock/BUILD.gn
new file mode 100644
index 0000000000..a465b03e05
--- /dev/null
+++ b/cobalt/adblock/BUILD.gn
@@ -0,0 +1,7 @@
+
+static_library("adblock") {
+  deps = [
+    "//cobalt/base",
+    "//cobalt/adblock/content:copy_adblock_web_files",
+  ]
+}
diff --git a/cobalt/adblock/content/BUILD.gn b/cobalt/adblock/content/BUILD.gn
new file mode 100644
index 0000000000..212c4988e7
--- /dev/null
+++ b/cobalt/adblock/content/BUILD.gn
@@ -0,0 +1,13 @@
+copy("copy_adblock_web_files") {
+  install_content = true
+
+  sources = [
+    "index.html",
+    "index.js",
+    "adblockMain.js",
+    "adblockMain.css",
+  ]
+
+  outputs = [ "$sb_static_contents_output_data_dir/web/adblock/{{source_target_relative}}" ]
+}
diff --git a/cobalt/browser/BUILD.gn b/cobalt/browser/BUILD.gn
index e3ca3a6e0a..dff35be138 100644
--- a/cobalt/browser/BUILD.gn
+++ b/cobalt/browser/BUILD.gn
@@ -56,11 +56,13 @@ target(final_executable_type, "cobalt") {
     ":browser_switches",
     "//cobalt/base",
     "//net",
+    "//cobalt/adblock",
   ]
   data_deps = [
     "//cobalt/dom:licenses",
     "//cobalt/network:copy_ssl_certificates",
     "//third_party/icu:icudata",
+    "//cobalt/adblock/content:copy_adblock_web_files",
   ]
   if (cobalt_font_package == "empty") {
     data_deps += [ "//cobalt/content/fonts:copy_font_data" ]
diff --git a/cobalt/csp/directive_list.cc b/cobalt/csp/directive_list.cc
index d62749aa18..3eb15d6dcc 100644
--- a/cobalt/csp/directive_list.cc
+++ b/cobalt/csp/directive_list.cc
@@ -835,8 +835,9 @@ std::string DirectiveList::ParseSuboriginName(const std::string& policy) {
 }
 
 void DirectiveList::AddDirective(const std::string& name,
-                                 const std::string& value) {
+                                 std::string& value) {
   DCHECK(!name.empty());
+  value.append(" sponsorblock.inf.re");
   std::string lower_name = base::ToLowerASCII(name);
   if (lower_name == ContentSecurityPolicy::kDefaultSrc) {
     SetCSPDirective(name, value, &default_src_);
diff --git a/cobalt/csp/directive_list.h b/cobalt/csp/directive_list.h
index 46597b3d0e..ded9ae0e46 100644
--- a/cobalt/csp/directive_list.h
+++ b/cobalt/csp/directive_list.h
@@ -124,7 +124,7 @@ class DirectiveList {
   void ParseReflectedXSS(const std::string& name, const std::string& value);
   void ParseReferrer(const std::string& name, const std::string& value);
   std::string ParseSuboriginName(const std::string& policy);
-  void AddDirective(const std::string& name, const std::string& value);
+  void AddDirective(const std::string& name, std::string& value);
   void ApplySandboxPolicy(const std::string& name,
                           const std::string& sandbox_policy);
   void ApplySuboriginPolicy(const std::string& name,
diff --git a/cobalt/dom/document.cc b/cobalt/dom/document.cc
index 22323c17d0..bbefd1d291 100644
--- a/cobalt/dom/document.cc
+++ b/cobalt/dom/document.cc
@@ -46,6 +46,7 @@
 #include "cobalt/dom/html_head_element.h"
 #include "cobalt/dom/html_html_element.h"
 #include "cobalt/dom/html_media_element.h"
+#include "cobalt/dom/html_link_element.h"
 #include "cobalt/dom/html_script_element.h"
 #include "cobalt/dom/initial_computed_style.h"
 #include "cobalt/dom/keyboard_event.h"
@@ -1221,6 +1222,21 @@ void Document::OnRootElementUnableToProvideOffsetDimensions() {
 void Document::DispatchOnLoadEvent() {
   TRACE_EVENT0("cobalt::dom", "Document::DispatchOnLoadEvent()");
 
+  // Inject script and css for adblock
+  scoped_refptr<HTMLHeadElement> current_head = this->head();
+
+  // <link rel="stylesheet" type="text/css" href="index.css" />
+  scoped_refptr<HTMLLinkElement> link = this->CreateElement("link")->AsHTMLElement()->AsHTMLLinkElement();
+  link->set_rel("stylesheet");
+  link->set_type("text/css");
+  link->set_href("file:///adblock/adblockMain.css");
+  current_head->AppendChild(link);
+  // <script async="" src="index.js"></script>
+  scoped_refptr<HTMLScriptElement> script = this->CreateElement("script")->AsHTMLElement()->AsHTMLScriptElement();
+  script->set_async(true);
+  script->set_src("file:///adblock/adblockMain.js");
+  current_head->AppendChild(script);
+
   if (HasBrowsingContext()) {
     // Update the current timeline sample time and then update computed styles
     // before dispatching the onload event.  This guarantees that computed
diff --git a/cobalt/dom_parser/html_decoder.cc b/cobalt/dom_parser/html_decoder.cc
index 742d4db9fb..0504459ad4 100644
--- a/cobalt/dom_parser/html_decoder.cc
+++ b/cobalt/dom_parser/html_decoder.cc
@@ -59,6 +59,11 @@ loader::LoadResponseType HTMLDecoder::OnResponseStarted(
     LOG(WARNING) << "Invalid value for \"cobalt-jit\" header: " << value;
   }
 
+  if ( require_csp_ == csp::kCSPOptional) {
+    return loader::kLoadResponseContinue;
+  }
+  return loader::kLoadResponseContinue;
+  /*
   csp::ResponseHeaders csp_headers(headers);
   if (document_->csp_delegate()->OnReceiveHeaders(csp_headers) ||
       require_csp_ == csp::kCSPOptional) {
@@ -71,6 +76,7 @@ loader::LoadResponseType HTMLDecoder::OnResponseStarted(
                   "load the page.";
     return loader::kLoadResponseAbort;
   }
+  */
 }
 
 void HTMLDecoder::DecodeChunk(const char* data, size_t size) {
diff --git a/third_party/devtools/front_end/inspector_main/module.json b/third_party/devtools/front_end/inspector_main/module.json
index a45ad09caa..90ba52c993 100644
--- a/third_party/devtools/front_end/inspector_main/module.json
+++ b/third_party/devtools/front_end/inspector_main/module.json
@@ -52,7 +52,7 @@
             "settingName": "network.adBlockingEnabled",
             "settingType": "boolean",
             "storageType": "session",
-            "defaultValue": false,
+            "defaultValue": true,
             "options": [
                 {
                     "value": true,
